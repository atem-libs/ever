
// identity
this self :=
    this

// konst (equiv to `true`)
this ever that :=
    this

this . fn :=
    this fn

// flip:
fn <> this that :=
    this (that fn)

// compose, read as 'of' --- "hello world" toUpper</trim
fn2 </ fn1 this :=
    (this fn1) fn2

// compose, read as 'andThen' --- "hello world" trim/>toUpper
fn1 /> fn2 this :=
    (this fn1) fn2

this == that :=
    _

need ยง have :=
    have ? need => have
